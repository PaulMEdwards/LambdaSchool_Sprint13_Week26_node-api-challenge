{
	"info": {
		"_postman_id": "86d54920-3bab-404c-b6f0-c1b460da7220",
		"name": "LS_Sp13_Wk26_node-api-challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "POST /api/projects (missing name/description)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6bd3b5-3913-4ebd-937c-93f56dae29a5",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.project).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.errorMessage).to.equal(\"Missing required name and/or description field!\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects (missing name)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "82"
								},
								{
									"key": "ETag",
									"value": "W/\"52-dHmUm0gjXYACsiRgSABzL4ryWOQ\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:01:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Missing required name and/or description field!\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.project.id).to.be.at.least(2);",
									"});",
									"",
									"//Store generated project ID for reuse in subsequent tests",
									"var pid = res.project.id;",
									"pm.collectionVariables.set(\"ProjectID\", pid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Project\",\n\t\"description\": \"Test Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Project\",\n\t\"description\": \"Test Description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "121"
								},
								{
									"key": "ETag",
									"value": "W/\"79-EhXjkhsVG3jF8869RojPX2XbZT4\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:03:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"project\": {\n        \"id\": 2,\n        \"name\": \"Test Project\",\n        \"description\": \"Test Description\",\n        \"completed\": false,\n        \"actions\": []\n    }\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:id/actions (missing description/notes)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "436b995e-3b63-41da-a602-8b971eaeb864",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.action).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.errorMessage).to.equal(\"Missing required description and/or notes field!\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/actions",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"actions"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/users/:id/posts (missing text)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/actions",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"actions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "83"
								},
								{
									"key": "ETag",
									"value": "W/\"53-vhrZF9BTWvf4Gh9bSDHLeWngLNA\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:13:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Missing required description and/or notes field!\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:id/actions (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "436b995e-3b63-41da-a602-8b971eaeb864",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.action.id).to.be.at.least(1);",
									"});",
									"",
									"//Store generated action ID for reuse in subsequent tests",
									"var aid = res.action.id;",
									"pm.collectionVariables.set(\"ActionID\", aid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Description\",\n\t\"notes\": \"Test Notes\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/actions",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"actions"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects/:id/actions (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Description\",\n\t\"notes\": \"Test Notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/actions",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"actions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "121"
								},
								{
									"key": "ETag",
									"value": "W/\"79-J8B9E5RO3sjy8r/TKC3ps5hzEBQ\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:16:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"action\": {\n        \"id\": 4,\n        \"project_id\": 2,\n        \"description\": \"Test Description\",\n        \"notes\": \"Test Notes\",\n        \"completed\": false\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "GET /api/projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0f3c8ca-fcc2-4eb5-a6c9-b6e40e6eba58",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projects.length).to.be.at.least(1);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.projects[0].name).to.equal(\"Complete Node.js and Express Challenge\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "292"
								},
								{
									"key": "ETag",
									"value": "W/\"124-tdIeyZQy8vVs5BlbZpgiwgN7gqQ\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:08:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"projects\": [\n        {\n            \"id\": 1,\n            \"name\": \"Complete Node.js and Express Challenge\",\n            \"description\": \"Build and Awesome API Using Node.js and Express to Manage Projects and Actions GTD Style!\",\n            \"completed\": false\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Test Project\",\n            \"description\": \"Test Description\",\n            \"completed\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.project).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.errorMessage).to.equal(\"Invalid project id!\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/users/:id (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-Is+JTa6klJAUBNvyJMFf3BsKGW4\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:12:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Invalid project id!\"\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.project.name).to.equal(\"Test Project\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "216"
								},
								{
									"key": "ETag",
									"value": "W/\"d8-7r/l6DxfBj4pLswQ/HpO/PksyA4\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:18:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"project\": {\n        \"id\": 2,\n        \"name\": \"Test Project\",\n        \"description\": \"Test Description\",\n        \"completed\": false,\n        \"actions\": [\n            {\n                \"id\": 4,\n                \"project_id\": 2,\n                \"description\": \"Test Description\",\n                \"notes\": \"Test Notes\",\n                \"completed\": false\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:id/actions (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.action).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.errorMessage).to.equal(\"Invalid project id!\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/actions",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"actions"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/users/:id/posts (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/actions",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"actions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-Is+JTa6klJAUBNvyJMFf3BsKGW4\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:19:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Invalid project id!\"\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:id/actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.actions).to.not.be.undefined;",
									"    var actionCount = res.actions.length",
									"    pm.expect(res.actions[actionCount-1].description).to.equal(\"Test Description\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/actions",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"actions"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:id/actions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/actions",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"actions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "124"
								},
								{
									"key": "ETag",
									"value": "W/\"7c-eFzkUNm2K1TuF22ds48JVT1yD5Y\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:21:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"actions\": [\n        {\n            \"id\": 4,\n            \"project_id\": 2,\n            \"description\": \"Test Description\",\n            \"notes\": \"Test Notes\",\n            \"completed\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "GET /api/actions/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.action).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.errorMessage).to.equal(\"Invalid action id!\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/actions/:id (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "53"
								},
								{
									"key": "ETag",
									"value": "W/\"35-lwHS6aQksP0CFtd1/Qp7L8skm/M\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:22:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Invalid action id!\"\n}"
						}
					]
				},
				{
					"name": "GET /api/actions/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.action.description).to.equal(\"Test Description\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions/{{ActionID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions",
								"{{ActionID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/actions/:id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions/{{ActionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions",
										"{{ActionID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "121"
								},
								{
									"key": "ETag",
									"value": "W/\"79-J8B9E5RO3sjy8r/TKC3ps5hzEBQ\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:24:08 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"action\": {\n        \"id\": 4,\n        \"project_id\": 2,\n        \"description\": \"Test Description\",\n        \"notes\": \"Test Notes\",\n        \"completed\": false\n    }\n}"
						}
					]
				},
				{
					"name": "GET /api/actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.actions[0].description).to.equal(\"Fork and Clone Repository\");",
									"    pm.expect(res.actions[1].description).to.equal(\"Install Dependencies\");",
									"    pm.expect(res.actions[2].description).to.equal(\"Design and Build API Endpoints\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/actions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "571"
								},
								{
									"key": "ETag",
									"value": "W/\"23b-BBVPUpG60ZnyKCEkQYV+SQKnD54\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:26:14 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"actions\": [\n        {\n            \"id\": 1,\n            \"project_id\": 1,\n            \"description\": \"Fork and Clone Repository\",\n            \"notes\": \"Repo URL: https://github.com/LambdaSchool/Sprint-Challenge-Node-Express\",\n            \"completed\": false\n        },\n        {\n            \"id\": 2,\n            \"project_id\": 1,\n            \"description\": \"Install Dependencies\",\n            \"notes\": \"Remember to cd into the folder where the Project was cloned\",\n            \"completed\": false\n        },\n        {\n            \"id\": 3,\n            \"project_id\": 1,\n            \"description\": \"Design and Build API Endpoints\",\n            \"notes\": \"This is where the magic happens!\",\n            \"completed\": false\n        },\n        {\n            \"id\": 4,\n            \"project_id\": 2,\n            \"description\": \"Test Description\",\n            \"notes\": \"Test Notes\",\n            \"completed\": false\n        }\n    ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "PUT /api/projects/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid project id!\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Project Updated\",\n\t\"description\": \"Test Description Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:id (not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Project Updated\",\n\t\"description\": \"Test Description Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-Is+JTa6klJAUBNvyJMFf3BsKGW4\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:27:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Invalid project id!\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:id (missing name/description)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afa213a4-8aad-44b4-baa1-50a06be4fe81",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Missing required name and/or description field!\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:id (missing name/description)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "82"
								},
								{
									"key": "ETag",
									"value": "W/\"52-dHmUm0gjXYACsiRgSABzL4ryWOQ\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:29:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Missing required name and/or description field!\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7c0b18-8c9b-4035-a568-56f7abaf3129",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.projectIdUpdated).to.equal(pm.collectionVariables.get('ProjectID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Project Updated\",\n\t\"description\": \"Test Description Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:id",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Project Updated\",\n\t\"description\": \"Test Description Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "ETag",
									"value": "W/\"25-hnH/7XqGqq3o0py0vQn7GBtueuE\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:30:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"projectIdUpdated\": 2\n}"
						}
					]
				},
				{
					"name": "PUT /api/actions/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid action id!\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Description Updated\",\n\t\"notes\": \"Test Notes Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/actions/:id (not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Description Updated\",\n\t\"notes\": \"Test Notes Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "53"
								},
								{
									"key": "ETag",
									"value": "W/\"35-lwHS6aQksP0CFtd1/Qp7L8skm/M\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:31:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Invalid action id!\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/actions/:id (missing description/notes)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d5cd2b5-aadf-4cc7-8d92-abc722298c14",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Missing required description and/or notes field!\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions/{{ActionID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions",
								"{{ActionID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/actions/:id (missing description/notes)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions/{{ActionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions",
										"{{ActionID}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "83"
								},
								{
									"key": "ETag",
									"value": "W/\"53-vhrZF9BTWvf4Gh9bSDHLeWngLNA\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:33:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Missing required description and/or notes field!\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/actions/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7c0b18-8c9b-4035-a568-56f7abaf3129",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.actionIdUpdated).to.equal(pm.collectionVariables.get('ActionID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Description Updated\",\n\t\"notes\": \"Test Notes Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions/{{ActionID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions",
								"{{ActionID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/actions/:id",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Description Updated\",\n\t\"notes\": \"Test Notes Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions/{{ActionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions",
										"{{ActionID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "36"
								},
								{
									"key": "ETag",
									"value": "W/\"24-ACKrdXyeBYRahfjxdCHQN+2zTv8\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:34:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"actionIdUpdated\": 4\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "DELETE /api/actions/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid action id!\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/actions/:id (not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "53"
								},
								{
									"key": "ETag",
									"value": "W/\"35-lwHS6aQksP0CFtd1/Qp7L8skm/M\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:35:08 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Invalid action id!\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/actions/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.actionIdRemoved).to.equal(pm.collectionVariables.get('ActionID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/actions/{{ActionID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"actions",
								"{{ActionID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/actions/:id",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/actions/{{ActionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"actions",
										"{{ActionID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "36"
								},
								{
									"key": "ETag",
									"value": "W/\"24-J0AuwnRN1wvUrSZqKq23b6SsJtQ\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:35:50 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"actionIdRemoved\": 4\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid project id!\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:id (not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-Is+JTa6klJAUBNvyJMFf3BsKGW4\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:36:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"Invalid project id!\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.projectIdRemoved).to.equal(pm.collectionVariables.get('ProjectID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:id",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "ETag",
									"value": "W/\"25-PgWxwMZ16kp04T740zWUF2y3Fkc\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jan 2020 04:37:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"projectIdRemoved\": 2\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "81005885-9980-4e6e-b9bf-0043d8f3b03c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d4f0b23e-bbbf-4e4e-9654-506bc8e3d5e8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "768391cf-5423-4ab0-a4ab-80578e8f37c2",
			"key": "ProjectID",
			"value": 2,
			"type": "number"
		},
		{
			"id": "ce266a85-0c6f-47d2-a473-2c09cfce0d2d",
			"key": "ActionID",
			"value": 4,
			"type": "number"
		}
	],
	"protocolProfileBehavior": {}
}